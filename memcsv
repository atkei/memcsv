#!/bin/sh

trap 'kill ${!}; exit 0' 1 2 3 15

run() {
  pid=$1
  interval_sec=$2s
  echo 'Timestamp,USS,PSS,RSS'

  while true
  do
    timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    uss=$(cat < "/proc/${pid}/smaps" 2> /dev/null | awk '/^Private_Clean|Private_Dirty/{sum += $2}END{print sum}')
    pss=$(cat < "/proc/${pid}/smaps" 2> /dev/null | awk '/^Pss/{sum += $2}END{print sum}')
    rss=$(cat < "/proc/${pid}/smaps" 2> /dev/null | awk '/^Rss/{sum += $2}END{print sum}')
    echo "${timestamp},${uss},${pss},${rss}"
    sleep "$interval_sec" &
    wait $!
  done
}

usage() {
  cat <<EOF
Usage: ./$(basename "$0") PID [--interval|-i ISEC]

PID     Target process id
ISEC    Interval seconds (default: 60)
EOF
}

if [ $# -eq 0 ]; then
  printf "[ERROR] PID not specified\n"
  usage
  exit 1
elif [ $# -gt 3 ]; then
  printf "[ERROR] Too many arguments\n"
  usage
  exit 1
fi

case $1 in
  help|--help|-h)
    usage
    exit 0
    ;;
  *)
    if ! expr "$1" : '^\([1-9][0-9]*\)$' > /dev/null 2>&1 || [ "$1" -lt 1 ] || [ "$1" -gt "$(cat /proc/sys/kernel/pid_max)" ]; then
      printf "[ERROR] Invalid PID: %s\n" "$1"
      usage
      exit 1
    fi
    if ! cat "/proc/${1}/smaps" > /dev/null 2>&1; then
      printf "[ERROR] Failed to start with PID: %s (e.g. Permission denied)" "$1"
      usage
      exit 1
    fi
    ;;
esac

if [ $# -eq 1 ]; then
  run "$1" 60
else
  case $2 in
    --interval|-i)
      if [ -z "$3" ]; then
        printf "[ERROR] ISEC not specified\n"
        usage
        exit 1
      fi
      if ! expr "$3" : '^\([1-9][0-9]*\)$' > /dev/null 2>&1 || [ "$3" -lt 1 ]; then
        printf "[ERROR] Invalid ISEC: %s\n" "$3"
        usage
        exit 1
      fi
      run "$1" "$3"
      ;;
    *)
      printf "[ERROR] Invalid option: %s\n" "$2"
      usage
      exit 1
      ;;
  esac
fi
